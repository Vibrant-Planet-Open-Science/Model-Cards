name: Model Card Release

on:
  pull_request:
    branches:
      - 'main'
    types:
      - closed
    
jobs:
  release:
    if: startsWith(github.event.pull_request.head.ref, 'release/') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Extract Model Name and Version
        id: parse_branch
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          MODEL_INFO=$(echo "$BRANCH_NAME" | sed -n 's/release\/\([a-zA-Z0-9-]\+\)\/v\([0-9.]\+\)/\1 \2/p')
          
          if [[ -z "$MODEL_INFO" ]]; then
            echo "::error::Could not parse model name and version from branch name: $BRANCH_NAME"
            exit 1
          fi
          
          MODEL_NAME=$(echo "$MODEL_INFO" | awk '{print $1}')
          MODEL_VERSION=$(echo "$MODEL_INFO" | awk '{print $2}')
          
          echo "MODEL_NAME=$MODEL_NAME" >> $GITHUB_OUTPUT
          echo "MODEL_VERSION=$MODEL_VERSION" >> $GITHUB_OUTPUT
          echo "MODEL_FILE_PATH=model_cards/$MODEL_NAME/$MODEL_NAME.md" >> $GITHUB_OUTPUT

      - name: Delete Existing Release
        id: delete_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="${{ steps.parse_branch.outputs.MODEL_NAME }}-v${{ steps.parse_branch.outputs.MODEL_VERSION }}"
          
          # Check if the release exists before attempting deletion
          if gh release view "$RELEASE_TAG" >/dev/null 2>&1; then
            echo "Release '$RELEASE_TAG' found. Deleting it..."
            gh release delete "$RELEASE_TAG" --yes --cleanup-tag
          else
            echo "No existing release with tag '$RELEASE_TAG' found. Nothing to delete."
          fi

      - name: Create New Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MODEL_NAME="${{ steps.parse_branch.outputs.MODEL_NAME }}"
          VERSION="${{ steps.parse_branch.outputs.MODEL_VERSION }}"
          RELEASE_TAG="${{ steps.parse_branch.outputs.MODEL_NAME }}-v${{ steps.parse_branch.outputs.MODEL_VERSION }}"
          
          RELEASE_NOTES=$(cat <<-END
          **Model Card Release**

          **Model:** $MODEL_NAME
          **Version:** $VERSION

          [View Model Card](${{ github.server_url }}/${{ github.repository }}/blob/$RELEASE_TAG/${{ steps.parse_branch.outputs.MODEL_FILE_PATH }})

          END
          )

          # Create the new release with the correct commit hash
          gh release create "$RELEASE_TAG" \
            --notes "$RELEASE_NOTES" \
            --title "$MODEL_NAME v$VERSION Release" \
            --repo ${{ github.repository }} \
            --target ${{ github.event.pull_request.merge_commit_sha }} \
            --prerelease=false \
            --draft=false